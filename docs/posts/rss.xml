













    
        
    

    
        
    

    

    
        
    

    

    
        
    

    

    
        
    

    

    
        
    







    






<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"  xml:lang="en-us"  xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        
            

            
                
            

            
                <link href="http://localhost:1313/posts/" rel="self" type="text/html"/>
            
        
            

            

            
                <link href="http://localhost:1313/posts/rss.xml" rel="alternate" type="application/rss+xml"/>
            
        

        

        

        <description>Recent content</description>

        
            <language>en-us</language>
        

        
            <lastBuildDate>2025-02-06 13:34:40 -0800 PST</lastBuildDate>
        

        <link>http://localhost:1313/posts/</link>

        

        <title>Posts Â· Home</title>

        

        
            <item>
                
                
                
                
                
                
                

                

                

                

                

                
                

                

                

                
                    <description><![CDATA[<p>So I used the Cursor AI-assisted integrated development environment (IDE)  pointing to the claude-3.5-sonnet model and asked it to build a dependency diagram example.  We have a big project at work and am looking to map out all the dependencies like a king.  Well, claude wrote the code like a king and it worked first try.</p>
<p>I asked it to give me layout options and it did that as well.</p>
<p>More on Cursor later.</p>
<p><img src="/posts/dependency-chart/dchart.png" alt="Dependency Chart"></p>
<p>Here is the prompt.</p>
<p>Write a program that will take a list of items and dependencies to produce a graph showing the items with relation to their dependencies.</p>
<p>Here is the code</p>
<p>&quot;&quot;&quot;</p>
<pre tabindex="0"><code>import networkx as nx
import matplotlib.pyplot as plt

def create_dependency_graph(dependencies):
    &#34;&#34;&#34;
    Create and visualize a directed graph from a dictionary of dependencies.
    
    Args:
        dependencies (dict): Dictionary where keys are items and values are lists of dependencies
    &#34;&#34;&#34;
    # Create a directed graph
    G = nx.DiGraph()
    
    # Add nodes and edges from the dependencies
    for item, deps in dependencies.items():
        # Add the main item if it doesn&#39;t exist
        if item not in G:
            G.add_node(item)
        
        # Add dependencies and edges
        for dep in deps:
            if dep not in G:
                G.add_node(dep)
            G.add_edge(dep, item)  # Arrow points from dependency to dependent item
    
    # Create the visualization
    plt.figure(figsize=(10, 8))
    pos = nx.spring_layout(G)
    
    # Draw the graph
    nx.draw(G, pos, with_labels=True, node_color=&#39;lightblue&#39;, 
            node_size=2000, arrowsize=20, 
            font_size=10, font_weight=&#39;bold&#39;)
    
    plt.title(&#34;Dependency Graph&#34;)
    plt.show()
</code></pre><h1 id="example-usage">Example usage</h1>
<p>&quot;&quot;&quot;</p>
<pre tabindex="0"><code>if __name__ == &#34;__main__&#34;:
    # Example dependencies dictionary
    dependencies = {
        &#39;A&#39;: [&#39;B&#39;, &#39;C&#39;],
        &#39;B&#39;: [&#39;D&#39;],
        &#39;C&#39;: [&#39;D&#39;, &#39;E&#39;],
        &#39;D&#39;: [&#39;E&#39;],
        &#39;E&#39;: []
    }
    
create_dependency_graph(dependencies)
</code></pre>]]></description>
                

                <guid isPermaLink="false">tag:localhost:1313,2025-02-06:/posts/dependency-chart/</guid>

                
                    <link>http://localhost:1313/posts/dependency-chart/</link>
                

                
                    <pubDate>Thu, 06 Feb 2025 13:34:40 PST</pubDate>
                

                
                    <title>Dependency Chart</title>
                
            </item>
        
            <item>
                
                
                
                
                
                
                

                

                

                

                

                
                

                

                

                
                    <description><![CDATA[<p>I decided to see how well DeepSeek writes a basic snake game in JavaScript.   While it understood the concept well with a minimum of prompting, it didn&rsquo;t do as well with the code even though it provided the following instructions once it finished coding.</p>
<p>First, the game didn&rsquo;t run at all.  Variable scoping was confused with variables in functions referring to those in other functions as if they were global.  To get the game to run, I made those variables global.</p>
<p>It was not very familiar with the ctx and HTML canvas API, applying size attributes on the wrong element and hallucinating some non-existent API calls to get the canvas size.  I changed the code to set the canvas size to a given x,y size scaled by a settable scale.</p>
<p>It was also referring to the canvas width and height as strings and trying to do math with them.  Removed quotes to fix those instances.</p>
<p>It completely failed to put in event handling code for the key presses.  I added that.</p>
<p>It stopped when it found food.  I fixed that as well.</p>
<p>A neat feature that it did add which worked right away was that the snake grew with alternating color segments.</p>
<p>Collision with itself was not discussed and not coded.</p>
<p>Anyhow, enjoy!</p>
<p>The game is simple but demonstrates basic game mechanics and controls in JavaScript.</p>
<p>To see the game in action, click <a href="/deepseek_snake.html">DeepSeek Snake Game</a></p>
]]></description>
                

                <guid isPermaLink="false">tag:localhost:1313,2024-01-23:/posts/deepseek_snake/</guid>

                
                    <link>http://localhost:1313/posts/deepseek_snake/</link>
                

                
                    <pubDate>Tue, 23 Jan 2024 10:00:00 -0700</pubDate>
                

                
                    <title>DeepSeek Snake</title>
                
            </item>
        
            <item>
                
                
                
                
                
                
                

                

                

                

                

                
                

                

                

                
                    <description><![CDATA[<p>Neural Networks</p>
<p><img src="/posts/post-3/bryce-canyon.jpg" alt="Bryce Canyon National Park"></p>
]]></description>
                

                <guid isPermaLink="false">tag:localhost:1313,2023-03-15:/posts/post-3/</guid>

                
                    <link>http://localhost:1313/posts/post-3/</link>
                

                
                    <pubDate>Wed, 15 Mar 2023 11:00:00 PDT</pubDate>
                

                
                    <title>Post 3</title>
                
            </item>
        
            <item>
                
                
                
                
                
                
                

                

                

                

                

                
                

                

                

                
                    <description><![CDATA[<p>Fuzzy Logic</p>
<p><img src="https://cdn.hackr.io/uploads/posts/attachments/1667299624QZZmuHDQG7.png" alt="Fuzzy Logic"></p>
]]></description>
                

                <guid isPermaLink="false">tag:localhost:1313,2023-02-15:/posts/post-2/</guid>

                
                    <link>http://localhost:1313/posts/post-2/</link>
                

                
                    <pubDate>Wed, 15 Feb 2023 10:00:00 -0700</pubDate>
                

                
                    <title>Post 2</title>
                
            </item>
        
            <item>
                
                
                
                
                
                
                

                

                

                

                

                
                

                

                

                
                    <description><![CDATA[<p>Boolean logic</p>
]]></description>
                

                <guid isPermaLink="false">tag:localhost:1313,2023-01-15:/posts/post-1/</guid>

                
                    <link>http://localhost:1313/posts/post-1/</link>
                

                
                    <pubDate>Sun, 15 Jan 2023 09:00:00 -0700</pubDate>
                

                
                    <title>Post 1</title>
                
            </item>
        
    </channel>
</rss>
