"use strict";(self.webpackChunkroehrsai=self.webpackChunkroehrsai||[]).push([[8130],{7735:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"dependency-chart-post","metadata":{"permalink":"/blog/dependency-chart-post","editUrl":"https://github.com/louisroehrs/ai/blog/2025-02-06-dependency-chart-post/index.md","source":"@site/blog/2025-02-06-dependency-chart-post/index.md","title":"Dependency Chart","description":"Claude in action","date":"2025-02-06T00:00:00.000Z","tags":[{"inline":false,"label":"AI","permalink":"/blog/tags/ai","description":"AI Articles"}],"readingTime":1.325,"hasTruncateMarker":true,"authors":[{"name":"Louis Roehrs","title":"Architect","url":"https://github.com/louisroehrs","page":{"permalink":"/blog/authors/roehrs"},"socials":{"x":"https://x.com/louisroehrs","github":"https://github.com/louisroehrs","linkedin":"https://www.linkedin.com/in/louisroehrs/"},"imageURL":"https://media.licdn.com/dms/image/v2/D5603AQHj6aIHE45IcQ/profile-displayphoto-shrink_200_200/profile-displayphoto-shrink_200_200/0/1683128840744?e=1744848000&v=beta&t=cvP8kgJUm_Tlk2vm_DpXeptDmGajITeydg6wmm0xwy8","key":"roehrs"}],"frontMatter":{"slug":"dependency-chart-post","title":"Dependency Chart","authors":"roehrs","tags":["ai"]},"unlisted":false,"nextItem":{"title":"DeepSeek Snake","permalink":"/blog/deepseek-snake-post"}},"content":"### Claude in action\\n\\nSo I used the Cursor AI-assisted integrated development environment (IDE)  pointing to the claude-3.5-sonnet model and asked it to build a dependency diagram example.  We have a big project at work and am looking to map out all the dependencies like a king.  Well, claude wrote the code like a king and it worked first try.\\n\\n\x3c!-- truncate --\x3e\\n\\nI asked it to give me layout options and it did that as well.\\n\\nMore on Cursor later.\\n\\n![Dependency Chart](dchart.png)\\n\\n### Prompt\\n\\n\\nWrite a program that will take a list of items and dependencies to produce a graph showing the items with relation to their dependencies.\\n\\n### Code\\n\\n\\n```\\nimport networkx as nx\\nimport matplotlib.pyplot as plt\\n\\ndef create_dependency_graph(dependencies):\\n    \\"\\"\\"\\n    Create and visualize a directed graph from a dictionary of dependencies.\\n    \\n    Args:\\n        dependencies (dict): Dictionary where keys are items and values are lists of dependencies\\n    \\"\\"\\"\\n    # Create a directed graph\\n    G = nx.DiGraph()\\n    \\n    # Add nodes and edges from the dependencies\\n    for item, deps in dependencies.items():\\n        # Add the main item if it doesn\'t exist\\n        if item not in G:\\n            G.add_node(item)\\n        \\n        # Add dependencies and edges\\n        for dep in deps:\\n            if dep not in G:\\n                G.add_node(dep)\\n            G.add_edge(dep, item)  # Arrow points from dependency to dependent item\\n    \\n    # Create the visualization\\n    plt.figure(figsize=(10, 8))\\n    pos = nx.spring_layout(G)\\n    \\n    # Draw the graph\\n    nx.draw(G, pos, with_labels=True, node_color=\'lightblue\', \\n            node_size=2000, arrowsize=20, \\n            font_size=10, font_weight=\'bold\')\\n    \\n    plt.title(\\"Dependency Graph\\")\\n    plt.show()\\n\\n```\\n\\n### Example usage\\n\\n\\n```\\nif __name__ == \\"__main__\\":\\n    # Example dependencies dictionary\\n    dependencies = {\\n        \'A\': [\'B\', \'C\'],\\n        \'B\': [\'D\'],\\n        \'C\': [\'D\', \'E\'],\\n        \'D\': [\'E\'],\\n        \'E\': []\\n    }\\n    \\ncreate_dependency_graph(dependencies)\\n\\n\\n```"},{"id":"deepseek-snake-post","metadata":{"permalink":"/blog/deepseek-snake-post","editUrl":"https://github.com/louisroehrs/ai/blog/2024-01-23-deepseek-snake-post.md","source":"@site/blog/2024-01-23-deepseek-snake-post.md","title":"DeepSeek Snake","description":"Let\'s play a game.","date":"2024-01-23T00:00:00.000Z","tags":[{"inline":false,"label":"AI","permalink":"/blog/tags/ai","description":"AI Articles"}],"readingTime":1.17,"hasTruncateMarker":true,"authors":[{"name":"Louis Roehrs","title":"Architect","url":"https://github.com/louisroehrs","page":{"permalink":"/blog/authors/roehrs"},"socials":{"x":"https://x.com/louisroehrs","github":"https://github.com/louisroehrs","linkedin":"https://www.linkedin.com/in/louisroehrs/"},"imageURL":"https://media.licdn.com/dms/image/v2/D5603AQHj6aIHE45IcQ/profile-displayphoto-shrink_200_200/profile-displayphoto-shrink_200_200/0/1683128840744?e=1744848000&v=beta&t=cvP8kgJUm_Tlk2vm_DpXeptDmGajITeydg6wmm0xwy8","key":"roehrs"}],"frontMatter":{"slug":"deepseek-snake-post","title":"DeepSeek Snake","authors":"roehrs","tags":["ai"]},"unlisted":false,"prevItem":{"title":"Dependency Chart","permalink":"/blog/dependency-chart-post"},"nextItem":{"title":"Neural Networks","permalink":"/blog/neural-networks-post"}},"content":"### Let\'s play a game.\\n\\nI decided to see how well DeepSeek writes a basic snake game in JavaScript.   While it understood the concept well with a minimum of prompting, it didn\'t do as well with the code even though it provided the following instructions once it finished coding.\\n\\n\x3c!-- truncate --\x3e\\n\\nFirst, the game didn\'t run at all.  Variable scoping was confused with variables in functions referring to those in other functions as if they were global.  To get the game to run, I made those variables global.\\n\\nIt was not very familiar with the ctx and HTML canvas API, applying size attributes on the wrong element and hallucinating some non-existent API calls to get the canvas size.  I changed the code to set the canvas size to a given x,y size scaled by a settable scale.\\n\\nIt was also referring to the canvas width and height as strings and trying to do math with them.  Removed quotes to fix those instances.\\n\\nIt completely failed to put in event handling code for the key presses.  I added that.\\n\\nIt stopped when it found food.  I fixed that as well.\\n\\nA neat feature that it did add which worked right away was that the snake grew with alternating color segments.\\n\\nCollision with itself was not discussed and not coded.\\n\\nAnyhow, enjoy!\\n\\nThe game is simple but demonstrates basic game mechanics and controls in JavaScript."},{"id":"neural-networks-post","metadata":{"permalink":"/blog/neural-networks-post","editUrl":"https://github.com/louisroehrs/ai/blog/2023-03-15-neural-networks-post.md/index.md","source":"@site/blog/2023-03-15-neural-networks-post.md/index.md","title":"Neural Networks","description":"Neural Networks","date":"2023-03-15T00:00:00.000Z","tags":[{"inline":false,"label":"AI","permalink":"/blog/tags/ai","description":"AI Articles"}],"readingTime":0.03,"hasTruncateMarker":false,"authors":[{"name":"Louis Roehrs","title":"Architect","url":"https://github.com/louisroehrs","page":{"permalink":"/blog/authors/roehrs"},"socials":{"x":"https://x.com/louisroehrs","github":"https://github.com/louisroehrs","linkedin":"https://www.linkedin.com/in/louisroehrs/"},"imageURL":"https://media.licdn.com/dms/image/v2/D5603AQHj6aIHE45IcQ/profile-displayphoto-shrink_200_200/profile-displayphoto-shrink_200_200/0/1683128840744?e=1744848000&v=beta&t=cvP8kgJUm_Tlk2vm_DpXeptDmGajITeydg6wmm0xwy8","key":"roehrs"}],"frontMatter":{"slug":"neural-networks-post","title":"Neural Networks","authors":"roehrs","tags":["ai"]},"unlisted":false,"prevItem":{"title":"DeepSeek Snake","permalink":"/blog/deepseek-snake-post"},"nextItem":{"title":"Fuzzy Logic","permalink":"/blog/fuzzy-logic-post"}},"content":"Neural Networks\\n\\n![Bryce Canyon National Park](bryce-canyon.jpg)"},{"id":"fuzzy-logic-post","metadata":{"permalink":"/blog/fuzzy-logic-post","editUrl":"https://github.com/louisroehrs/ai/blog/2023-02-15-fuzzy-logic-post.md","source":"@site/blog/2023-02-15-fuzzy-logic-post.md","title":"Fuzzy Logic","description":"Fuzzy Logic","date":"2023-02-15T00:00:00.000Z","tags":[{"inline":false,"label":"AI","permalink":"/blog/tags/ai","description":"AI Articles"}],"readingTime":0.01,"hasTruncateMarker":false,"authors":[{"name":"Louis Roehrs","title":"Architect","url":"https://github.com/louisroehrs","page":{"permalink":"/blog/authors/roehrs"},"socials":{"x":"https://x.com/louisroehrs","github":"https://github.com/louisroehrs","linkedin":"https://www.linkedin.com/in/louisroehrs/"},"imageURL":"https://media.licdn.com/dms/image/v2/D5603AQHj6aIHE45IcQ/profile-displayphoto-shrink_200_200/profile-displayphoto-shrink_200_200/0/1683128840744?e=1744848000&v=beta&t=cvP8kgJUm_Tlk2vm_DpXeptDmGajITeydg6wmm0xwy8","key":"roehrs"}],"frontMatter":{"slug":"fuzzy-logic-post","title":"Fuzzy Logic","authors":"roehrs","tags":["ai"]},"unlisted":false,"prevItem":{"title":"Neural Networks","permalink":"/blog/neural-networks-post"},"nextItem":{"title":"Boolean Logic","permalink":"/blog/boolean-logic-post"}},"content":"![Fuzzy Logic](https://cdn.hackr.io/uploads/posts/attachments/1667299624QZZmuHDQG7.png)"},{"id":"boolean-logic-post","metadata":{"permalink":"/blog/boolean-logic-post","editUrl":"https://github.com/louisroehrs/ai/blog/2023-01-15-boolean-logic-post.md","source":"@site/blog/2023-01-15-boolean-logic-post.md","title":"Boolean Logic","description":"Boolean logic hello","date":"2023-01-15T00:00:00.000Z","tags":[{"inline":false,"label":"AI","permalink":"/blog/tags/ai","description":"AI Articles"}],"readingTime":0.055,"hasTruncateMarker":true,"authors":[{"name":"Louis Roehrs","title":"Architect","url":"https://github.com/louisroehrs","page":{"permalink":"/blog/authors/roehrs"},"socials":{"x":"https://x.com/louisroehrs","github":"https://github.com/louisroehrs","linkedin":"https://www.linkedin.com/in/louisroehrs/"},"imageURL":"https://media.licdn.com/dms/image/v2/D5603AQHj6aIHE45IcQ/profile-displayphoto-shrink_200_200/profile-displayphoto-shrink_200_200/0/1683128840744?e=1744848000&v=beta&t=cvP8kgJUm_Tlk2vm_DpXeptDmGajITeydg6wmm0xwy8","key":"roehrs"}],"frontMatter":{"slug":"boolean-logic-post","title":"Boolean Logic","authors":["roehrs"],"tags":["ai"]},"unlisted":false,"prevItem":{"title":"Fuzzy Logic","permalink":"/blog/fuzzy-logic-post"},"nextItem":{"title":"Welcome","permalink":"/blog/welcome"}},"content":"Boolean logic hello\\n\\n\x3c!-- truncate --\x3e\\n\\nDo i need more text?"},{"id":"welcome","metadata":{"permalink":"/blog/welcome","editUrl":"https://github.com/louisroehrs/ai/blog/2021-08-26-welcome/index.md","source":"@site/blog/2021-08-26-welcome/index.md","title":"Welcome","description":"Docusaurus blogging features are powered by the blog plugin.","date":"2021-08-26T00:00:00.000Z","tags":[{"inline":false,"label":"AI","permalink":"/blog/tags/ai","description":"AI Articles"},{"inline":false,"label":"Hello","permalink":"/blog/tags/hello","description":"Hello"}],"readingTime":0.465,"hasTruncateMarker":true,"authors":[{"name":"Louis Roehrs","title":"Architect","url":"https://github.com/louisroehrs","page":{"permalink":"/blog/authors/roehrs"},"socials":{"x":"https://x.com/louisroehrs","github":"https://github.com/louisroehrs","linkedin":"https://www.linkedin.com/in/louisroehrs/"},"imageURL":"https://media.licdn.com/dms/image/v2/D5603AQHj6aIHE45IcQ/profile-displayphoto-shrink_200_200/profile-displayphoto-shrink_200_200/0/1683128840744?e=1744848000&v=beta&t=cvP8kgJUm_Tlk2vm_DpXeptDmGajITeydg6wmm0xwy8","key":"roehrs"}],"frontMatter":{"slug":"welcome","title":"Welcome","authors":"roehrs","tags":["ai","hello"]},"unlisted":false,"prevItem":{"title":"Boolean Logic","permalink":"/blog/boolean-logic-post"},"nextItem":{"title":"MDX Blog Post","permalink":"/blog/mdx-blog-post"}},"content":"[Docusaurus blogging features](https://docusaurus.io/docs/blog) are powered by the [blog plugin](https://docusaurus.io/docs/api/plugins/@docusaurus/plugin-content-blog).\\n\\nHere are a few tips you might find useful.\\n\\n\x3c!-- truncate --\x3e\\n\\nSimply add Markdown files (or folders) to the `blog` directory.\\n\\nRegular blog authors can be added to `authors.yml`.\\n\\nThe blog post date can be extracted from filenames, such as:\\n\\n- `2019-05-30-welcome.md`\\n- `2019-05-30-welcome/index.md`\\n\\nA blog post folder can be convenient to co-locate blog post images:\\n\\n![Docusaurus Plushie](./docusaurus-plushie-banner.jpeg)\\n\\nThe blog supports tags as well!\\n\\n**And if you don\'t want a blog**: just delete this directory, and use `blog: false` in your Docusaurus config."},{"id":"mdx-blog-post","metadata":{"permalink":"/blog/mdx-blog-post","editUrl":"https://github.com/louisroehrs/ai/blog/2021-08-01-mdx-blog-post.mdx","source":"@site/blog/2021-08-01-mdx-blog-post.mdx","title":"MDX Blog Post","description":"Blog posts support Docusaurus Markdown features, such as MDX.","date":"2021-08-01T00:00:00.000Z","tags":[{"inline":true,"label":"docusaurus","permalink":"/blog/tags/docusaurus"}],"readingTime":0.535,"hasTruncateMarker":true,"authors":[{"name":"Louis Roehrs","title":"Architect","url":"https://github.com/louisroehrs","page":{"permalink":"/blog/authors/roehrs"},"socials":{"x":"https://x.com/louisroehrs","github":"https://github.com/louisroehrs","linkedin":"https://www.linkedin.com/in/louisroehrs/"},"imageURL":"https://media.licdn.com/dms/image/v2/D5603AQHj6aIHE45IcQ/profile-displayphoto-shrink_200_200/profile-displayphoto-shrink_200_200/0/1683128840744?e=1744848000&v=beta&t=cvP8kgJUm_Tlk2vm_DpXeptDmGajITeydg6wmm0xwy8","key":"roehrs"}],"frontMatter":{"slug":"mdx-blog-post","title":"MDX Blog Post","authors":"roehrs","tags":["docusaurus"]},"unlisted":false,"prevItem":{"title":"Welcome","permalink":"/blog/welcome"}},"content":"Blog posts support [Docusaurus Markdown features](https://docusaurus.io/docs/markdown-features), such as [MDX](https://mdxjs.com/).\\n\\n:::tip\\n\\nUse the power of React to create interactive blog posts.\\n\\n:::\\n\\n{/* truncate */}\\n\\nFor example, use JSX to create an interactive button:\\n\\n```js\\n<script language=JavaSript>>\\na = b\\n<\/script>\\n<button onClick={() => alert(\'button clicked!\')}>Click me!</button>\\n```\\n<script language=\\"JavaSript\\">\\na = 12;\\ndocument.write(a)\\n<\/script>\\n\\n<button onClick={() => alert(\'button clicked!\')}>Click me!</button>\\n\\n\\nimport { useState } from \'react\';\\n\\nexport default function Counter() {\\n  const [count, setCount] = useState(0);\\n  return (\\n    <div>\\n      <p>Current count: {count}</p>\\n      <button onClick={() => setCount(count + 1)}>Increase</button>\\n    </div>\\n  );\\n}\\n\\n# Using React and JavaScript in MDX\\n\\nClick the button to increase the count:\\n\\n<Counter />"}]}}')}}]);